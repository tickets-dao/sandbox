#!/bin/bash -x 

. default



# TODO REFACTOR ME
package_install() {
    src="$1"
	hash="$(sha256sum "$src" | cut -c 1-64)"
	chaincode_no_ext="${src%.tar.gz}"
	chaincode="${chaincode_no_ext##*/}"
	channel_dir="${src%/*}"
	channel="${channel_dir##*/}"
	namespace_dir="${channel_dir%/*}"
	namespace="${namespace_dir##*/}"
	configtx="$channel_dir/configtx.yaml"
	version="$(cat "$src.version")"
	policy="$(cat "$src.policy")"
	init="$(cat "$src.init")"
	sequence_file="$src.sequence"
	sequence="$(cat "$sequence_file" || echo "1")"
	id="${chaincode}_${version}:${hash}"
	dst="$dst_dir/$chaincode.tar.gz.install"

	#_equal "$src" "$dst" && return
	#err="0"
	for peer in $(_configtx_peer_fqdn "$configtx")
	do
		org="$(_org_by_hostname "$peer")"
		export CORE_PEER_LOCALMSPID="$org"
    	export CORE_PEER_ID="$peer"
    	export CORE_PEER_MSPCONFIGPATH="$(_crypto_admin_msp_by_org "$org")"
    	export CORE_PEER_TLS_ROOTCERT_FILE="$(_crypto_admin_ca_by_org "$org")"
		export CORE_PEER_ADDRESS="$peer:$PEER_PORT"
		export CORE_PEER_TLS_ENABLED="true"

		_info "query '$chaincode' to '$peer'"
		orderer="$(_configtx_orderer_fqdn "$configtx" "1")"
		peer chaincode invoke \
			--tls \
			--isInit \
			--cafile "$(_crypto_ca_by_hostname "$orderer")" \
			--orderer "$orderer:$ORDERER_PORT" \
			--channelID "$channel" \
			--name "$chaincode" \
			--ctor '{"Function":"Init", "Args":["xxx"]}'
		exit
	done
}

for package in $(find "$CHANNEL_STATE" -type f -name "*.tar.gz")
do
	echo "$package"
	package_install "$package"
done
