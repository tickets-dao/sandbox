version: '3.4'

###############################################################################
x-check: &default-healthcheck
  healthcheck:
    test: [ "CMD", "/data/.prepare" ]
    interval: 5s
    timeout: 4s
  deploy:
    resources:
      limits:
        memory: 512M
      reservations:
        memory: 16M

###############################################################################
volumes:
  toolbox--main:
  toolbox--state:
  #
  test-bastion-001.org0--opt:
  test-bastion-001.org0--run:
  test-bastion-001.org1--opt:
  test-bastion-001.org1--run:
  test-bastion-001.org2--opt:
  test-bastion-001.org2--run:
  #
  test-ca-001.org0--opt:
  test-ca-001.org0--run:
  test-ca-001.org1--opt:
  test-ca-001.org1--run:
  test-ca-001.org2--opt:
  test-ca-001.org2--run:
  #
  test-orderer-001.org0--opt:
  test-orderer-001.org0--run:
  test-orderer-002.org0--opt:
  test-orderer-002.org0--run:
  test-orderer-011.org0--opt:
  test-orderer-011.org0--run:
  test-orderer-012.org0--opt:
  test-orderer-012.org0--run:
  test-orderer-001.org1--opt:
  test-orderer-001.org1--run:
  test-orderer-002.org1--opt:
  test-orderer-002.org1--run:
  test-orderer-011.org1--opt:
  test-orderer-011.org1--run:
  test-orderer-012.org1--opt:
  test-orderer-012.org1--run:
  #
  test-peer-001.org0--opt:
  test-peer-001.org0--run:
  test-peer-002.org0--opt:
  test-peer-002.org0--run:
  test-peer-001.org1--opt:
  test-peer-001.org1--run:
  test-peer-002.org1--opt:
  test-peer-002.org1--run:
  test-peer-001.org2--opt:
  test-peer-001.org2--run:
  test-peer-002.org2--opt:
  test-peer-002.org2--run:
  #
  test-tool-001.org0--opt:
  test-tool-001.org0--run:
  test-tool-001.org1--opt:
  test-tool-001.org1--run:
  test-tool-001.org2--opt:
  test-tool-001.org2--run:

services:
###############################################################################
  toolbox:
    image: "${IMG_TOOLBOX}"
    tty: true
    stdin_open: true
    environment:
      - HOME=/ansible/main
    working_dir: /ansible/main
    entrypoint: entrypoint
    volumes:
      - ./toolbox/usr/local/bin/entrypoint:/usr/local/bin/entrypoint:ro
      - ./toolbox/ansible/main/.ssh:/ansible/main/.ssh:ro
      - ./toolbox/ansible/main/inventory:/ansible/main/inventory:ro
      - ./toolbox/ansible/main/playbooks:/ansible/main/playbooks:ro
      - ./toolbox/ansible/main/roles:/ansible/main/roles:ro
      - ./toolbox/ansible/main/vault:/ansible/main/vault:ro
      - ./toolbox/ansible/main/ansible.cfg:/ansible/main/ansible.cfg:ro
      - toolbox--main:/ansible/main
      - toolbox--state:/state
      #
      - test-bastion-001.org0--opt:/state/test-bastion-001.org0--opt
      - test-bastion-001.org0--run:/state/test-bastion-001.org0--run
      - test-bastion-001.org1--opt:/state/test-bastion-001.org1--opt
      - test-bastion-001.org1--run:/state/test-bastion-001.org1--run
      - test-bastion-001.org2--opt:/state/test-bastion-001.org2--opt
      - test-bastion-001.org2--run:/state/test-bastion-001.org2--run
      #
      - test-ca-001.org0--opt:/state/test-ca-001.org0--opt
      - test-ca-001.org0--run:/state/test-ca-001.org0--run
      - test-ca-001.org1--opt:/state/test-ca-001.org1--opt
      - test-ca-001.org1--run:/state/test-ca-001.org1--run
      - test-ca-001.org2--opt:/state/test-ca-001.org2--opt
      - test-ca-001.org2--run:/state/test-ca-001.org2--run
      #
      - test-orderer-001.org0--opt:/state/test-orderer-001.org0--opt
      - test-orderer-001.org0--run:/state/test-orderer-001.org0--run
      - test-orderer-002.org0--opt:/state/test-orderer-002.org0--opt
      - test-orderer-002.org0--run:/state/test-orderer-002.org0--run
      - test-orderer-011.org0--opt:/state/test-orderer-011.org0--opt
      - test-orderer-011.org0--run:/state/test-orderer-011.org0--run
      - test-orderer-012.org0--opt:/state/test-orderer-012.org0--opt
      - test-orderer-012.org0--run:/state/test-orderer-012.org0--run
      - test-orderer-001.org1--opt:/state/test-orderer-001.org1--opt
      - test-orderer-001.org1--run:/state/test-orderer-001.org1--run
      - test-orderer-002.org1--opt:/state/test-orderer-002.org1--opt
      - test-orderer-002.org1--run:/state/test-orderer-002.org1--run
      - test-orderer-011.org1--opt:/state/test-orderer-011.org1--opt
      - test-orderer-011.org1--run:/state/test-orderer-011.org1--run
      - test-orderer-012.org1--opt:/state/test-orderer-012.org1--opt
      - test-orderer-012.org1--run:/state/test-orderer-012.org1--run
      #
      - test-peer-001.org0--opt:/state/test-peer-001.org0--opt
      - test-peer-001.org0--run:/state/test-peer-001.org0--run
      - test-peer-002.org0--opt:/state/test-peer-002.org0--opt
      - test-peer-002.org0--run:/state/test-peer-002.org0--run
      - test-peer-001.org1--opt:/state/test-peer-001.org1--opt
      - test-peer-001.org1--run:/state/test-peer-001.org1--run
      - test-peer-002.org1--opt:/state/test-peer-002.org1--opt
      - test-peer-002.org1--run:/state/test-peer-002.org1--run
      - test-peer-001.org2--opt:/state/test-peer-001.org2--opt
      - test-peer-001.org2--run:/state/test-peer-001.org2--run
      - test-peer-002.org2--opt:/state/test-peer-002.org2--opt
      - test-peer-002.org2--run:/state/test-peer-002.org2--run
      #
      - test-tool-001.org0--opt:/state/test-tool-001.org0--opt
      - test-tool-001.org0--run:/state/test-tool-001.org0--run
      - test-tool-001.org1--opt:/state/test-tool-001.org1--opt
      - test-tool-001.org1--run:/state/test-tool-001.org1--run
      - test-tool-001.org2--opt:/state/test-tool-001.org2--opt
      - test-tool-001.org2--run:/state/test-tool-001.org2--run


###############################################################################
  test-bastion-001.org0:
    image: "${IMG_BASE_SYSTEM}"
    restart: always
    hostname: test-bastion-001
    domainname: org0
    privileged: true
    volumes:
      - ./test-bastion-001.org0/data:/data
      - test-bastion-001.org0--opt:/opt
      - test-bastion-001.org0--run:/run
    ports:
      - "${IP}:${EXP_BASTION_001_ORG0}"
    <<: *default-healthcheck

  test-bastion-001.org1:
    image: "${IMG_BASE_SYSTEM}"
    restart: always
    hostname: test-bastion-001
    domainname: org1
    privileged: true
    volumes:
      - ./test-bastion-001.org1/data:/data
      - test-bastion-001.org1--opt:/opt
      - test-bastion-001.org1--run:/run
    ports:
      - "${IP}:${EXP_BASTION_001_ORG1}"
    <<: *default-healthcheck

  test-bastion-001.org2:
    image: "${IMG_BASE_SYSTEM}"
    restart: always
    hostname: test-bastion-001
    domainname: org2
    privileged: true
    volumes:
      - ./test-bastion-001.org2/data:/data
      - test-bastion-001.org2--opt:/opt
      - test-bastion-001.org2--run:/run
    ports:
      - "${IP}:${EXP_BASTION_001_ORG2}"
    <<: *default-healthcheck

###############################################################################
  test-ca-001.org0:
    image: "${IMG_BASE_SYSTEM}"
    restart: always
    hostname: test-ca-001
    domainname: org0
    privileged: true
    volumes:
      - ./test-ca-001.org0/data:/data
      - test-ca-001.org0--opt:/opt
      - test-ca-001.org0--run:/run
    <<: *default-healthcheck

  test-ca-001.org1:
    image: "${IMG_BASE_SYSTEM}"
    restart: always
    hostname: test-ca-001
    domainname: org1
    privileged: true
    volumes:
      - ./test-ca-001.org1/data:/data
      - test-ca-001.org1--opt:/opt
      - test-ca-001.org1--run:/run
    <<: *default-healthcheck

  test-ca-001.org2:
    image: "${IMG_BASE_SYSTEM}"
    restart: always
    hostname: test-ca-001
    domainname: org2
    privileged: true
    volumes:
      - ./test-ca-001.org2/data:/data
      - test-ca-001.org2--opt:/opt
      - test-ca-001.org2--run:/run
    <<: *default-healthcheck

###############################################################################
  test-orderer-001.org0:
    image: "${IMG_BASE_SYSTEM}"
    restart: always
    hostname: test-orderer-001
    domainname: org0
    privileged: true
    volumes:
      - ./test-orderer-001.org0/data:/data
      - test-orderer-001.org0--opt:/opt
      - test-orderer-001.org0--run:/run
    ports:
      - "${IP}:${EXP_ORDERER_001_ORG0}"
    <<: *default-healthcheck

  test-orderer-002.org0:
    image: "${IMG_BASE_SYSTEM}"
    restart: always
    hostname: test-orderer-002
    domainname: org0
    privileged: true
    volumes:
      - ./test-orderer-002.org0/data:/data
      - test-orderer-002.org0--opt:/opt
      - test-orderer-002.org0--run:/run
    ports:
      - "${IP}:${EXP_ORDERER_002_ORG0}"
    <<: *default-healthcheck

  test-orderer-011.org0:
    image: "${IMG_BASE_SYSTEM}"
    restart: always
    hostname: test-orderer-011
    domainname: org0
    privileged: true
    volumes:
      - ./test-orderer-011.org0/data:/data
      - test-orderer-011.org0--opt:/opt
      - test-orderer-011.org0--run:/run
    ports:
      - "${IP}:${EXP_ORDERER_011_ORG0}"
    <<: *default-healthcheck

  test-orderer-012.org0:
    image: "${IMG_BASE_SYSTEM}"
    restart: always
    hostname: test-orderer-012
    domainname: org0
    privileged: true
    volumes:
      - ./test-orderer-012.org0/data:/data
      - test-orderer-012.org0--opt:/opt
      - test-orderer-012.org0--run:/run
    ports:
      - "${IP}:${EXP_ORDERER_012_ORG0}"
    <<: *default-healthcheck

  test-orderer-001.org1:
    image: "${IMG_BASE_SYSTEM}"
    restart: always
    hostname: test-orderer-001
    domainname: org1
    privileged: true
    volumes:
      - ./test-orderer-001.org1/data:/data
      - test-orderer-001.org1--opt:/opt
      - test-orderer-001.org1--run:/run
    ports:
      - "${IP}:${EXP_ORDERER_001_ORG1}"
    <<: *default-healthcheck

  test-orderer-002.org1:
    image: "${IMG_BASE_SYSTEM}"
    restart: always
    hostname: test-orderer-002
    domainname: org1
    privileged: true
    volumes:
      - ./test-orderer-002.org1/data:/data
      - test-orderer-002.org1--opt:/opt
      - test-orderer-002.org1--run:/run
    ports:
      - "${IP}:${EXP_ORDERER_002_ORG1}"
    <<: *default-healthcheck

  test-orderer-011.org1:
    image: "${IMG_BASE_SYSTEM}"
    restart: always
    hostname: test-orderer-011
    domainname: org1
    privileged: true
    volumes:
      - ./test-orderer-011.org1/data:/data
      - test-orderer-011.org1--opt:/opt
      - test-orderer-011.org1--run:/run
    ports:
      - "${IP}:${EXP_ORDERER_011_ORG1}"
    <<: *default-healthcheck

  test-orderer-012.org1:
    image: "${IMG_BASE_SYSTEM}"
    restart: always
    hostname: test-orderer-012
    domainname: org1
    privileged: true
    volumes:
      - ./test-orderer-012.org1/data:/data
      - test-orderer-012.org1--opt:/opt
      - test-orderer-012.org1--run:/run
    ports:
      - "${IP}:${EXP_ORDERER_012_ORG1}"
    <<: *default-healthcheck

###############################################################################
  test-peer-001.org0:
    image: "${IMG_BASE_SYSTEM}"
    restart: always
    hostname: test-peer-001
    domainname: org0
    privileged: true
    volumes:
      - ./test-peer-001.org0/data:/data
      - test-peer-001.org0--opt:/opt
      - test-peer-001.org0--run:/run
    ports:
      - "${IP}:${EXP_PEER_001_ORG0}"
    <<: *default-healthcheck

  test-peer-002.org0:
    image: "${IMG_BASE_SYSTEM}"
    restart: always
    hostname: test-peer-002
    domainname: org0
    privileged: true
    volumes:
      - ./test-peer-002.org0/data:/data
      - test-peer-002.org0--opt:/opt
      - test-peer-002.org0--run:/run
    ports:
      - "${IP}:${EXP_PEER_002_ORG0}"
    <<: *default-healthcheck

  test-peer-001.org1:
    image: "${IMG_BASE_SYSTEM}"
    restart: always
    hostname: test-peer-001
    domainname: org1
    privileged: true
    volumes:
      - ./test-peer-001.org1/data:/data
      - test-peer-001.org1--opt:/opt
      - test-peer-001.org1--run:/run
    ports:
      - "${IP}:${EXP_PEER_001_ORG1}"
    <<: *default-healthcheck

  test-peer-002.org1:
    image: "${IMG_BASE_SYSTEM}"
    restart: always
    hostname: test-peer-002
    domainname: org1
    privileged: true
    volumes:
      - ./test-peer-002.org1/data:/data
      - test-peer-002.org1--opt:/opt
      - test-peer-002.org1--run:/run
    ports:
      - "${IP}:${EXP_PEER_002_ORG1}"
    <<: *default-healthcheck

  test-peer-001.org2:
    image: "${IMG_BASE_SYSTEM}"
    restart: always
    hostname: test-peer-001
    domainname: org2
    privileged: true
    volumes:
      - ./test-peer-001.org2/data:/data
      - test-peer-001.org2--opt:/opt
      - test-peer-001.org2--run:/run
    ports:
      - "${IP}:${EXP_PEER_001_ORG2}"
    <<: *default-healthcheck

  test-peer-002.org2:
    image: "${IMG_BASE_SYSTEM}"
    restart: always
    hostname: test-peer-002
    domainname: org2
    privileged: true
    volumes:
      - ./test-peer-002.org2/data:/data
      - test-peer-002.org2--opt:/opt
      - test-peer-002.org2--run:/run
    ports:
      - "${IP}:${EXP_PEER_002_ORG2}"
    <<: *default-healthcheck

###############################################################################
  test-tool-001.org0:
    image: "${IMG_BASE_SYSTEM}"
    restart: always
    hostname: test-tool-001
    domainname: org0
    privileged: true
    volumes:
      - ./test-tool-001.org0/data:/data
      - test-tool-001.org0--opt:/opt
      - test-tool-001.org0--run:/run
    ports:
      - "${IP}:${EXP_TOOL_001_ORG0}"
    <<: *default-healthcheck

  test-tool-001.org1:
    image: "${IMG_BASE_SYSTEM}"
    restart: always
    hostname: test-tool-001
    domainname: org1
    privileged: true
    volumes:
      - ./test-tool-001.org1/data:/data
      - test-tool-001.org1--opt:/opt
      - test-tool-001.org1--run:/run
    ports:
      - "${IP}:${EXP_TOOL_001_ORG1}"
    <<: *default-healthcheck

  test-tool-001.org2:
    image: "${IMG_BASE_SYSTEM}"
    restart: always
    hostname: test-tool-001
    domainname: org2
    privileged: true
    volumes:
      - ./test-tool-001.org2/data:/data
      - test-tool-001.org2--opt:/opt
      - test-tool-001.org2--run:/run
    ports:
      - "${IP}:${EXP_TOOL_001_ORG2}"
    <<: *default-healthcheck
